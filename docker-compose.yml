version: '3.8'

services:
  nestjs-zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: nestjs-zookeeper
    tmpfs: '/zktmp'
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '2181:2181'
    networks:
      - nestjs-network

  nestjs-kafka-1:
    image: bitnami/kafka:3.7.0
    container_name: nestjs-kafka-1
    depends_on:
      - nestjs-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: nestjs-zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://nestjs-kafka-1:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - '9092:9092'
      - '29092:29092'
    networks:
      - nestjs-network

  nestjs-kafka-2:
    image: bitnami/kafka:3.7.0
    container_name: nestjs-kafka-2
    depends_on:
      - nestjs-zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: nestjs-zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9093,EXTERNAL://0.0.0.0:29093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://nestjs-kafka-2:9093,EXTERNAL://localhost:29093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - '9093:9093'
      - '29093:29093'
    networks:
      - nestjs-network

  nestjs-kafka-3:
    image: bitnami/kafka:3.7.0
    container_name: nestjs-kafka-3
    depends_on:
      - nestjs-zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_CFG_ZOOKEEPER_CONNECT: nestjs-zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9094,EXTERNAL://0.0.0.0:29094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://nestjs-kafka-3:9094,EXTERNAL://localhost:29094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - '9094:9094'
      - '29094:29094'
    networks:
      - nestjs-network

  nestjs-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: nestjs-kafka-ui
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: nestjs-zookeeper:2181
    networks:
      - nestjs-network

  facade-service:
    build:
      # context: ./apps/facade-service
      dockerfile: ./apps/facade-service/Dockerfile
    container_name: facade-service
    ports:
      - '3000:3000'
    environment:
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

  messages-service-1:
    build:
      # context: ./apps/messages-service
      dockerfile: ./apps/messages-service/Dockerfile
    container_name: messages-service-1
    ports:
      - '3001:3000'
    environment:
      SERVICE_NAME: messages-service-1
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

  messages-service-2:
    build:
      # context: ./apps/messages-service
      dockerfile: ./apps/messages-service/Dockerfile
    container_name: messages-service-2
    ports:
      - '3002:3000'
    environment:
      SERVICE_NAME: messages-service-2
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

  logging-service-1:
    build:
      # context: ./apps/logging-service
      dockerfile: ./apps/logging-service/Dockerfile
    container_name: logging-service-1
    ports:
      - '4001:4000'
    environment:
      SERVICE_NAME: logging-service-1
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

  logging-service-2:
    build:
      # context: ./apps/logging-service
      dockerfile: ./apps/logging-service/Dockerfile
    container_name: logging-service-2
    ports:
      - '4002:4000'
    environment:
      SERVICE_NAME: logging-service-2
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

  logging-service-3:
    build:
      # context: ./apps/logging-service
      dockerfile: ./apps/logging-service/Dockerfile
    container_name: logging-service-3
    ports:
      - '4003:4000'
    environment:
      SERVICE_NAME: logging-service-3
      KAFKA_BROKER: nestjs-kafka-1:9092,nestjs-kafka-2:9093,nestjs-kafka-3:9094
    depends_on:
      - nestjs-kafka-1
      - nestjs-kafka-2
      - nestjs-kafka-3
    networks:
      - nestjs-network

networks:
  nestjs-network:
    driver: bridge
